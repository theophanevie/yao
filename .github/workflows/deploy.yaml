name: Build and deploy to lenuage cluster

on:
  push:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
      name: Deploy
      needs:
        - build-and-push-image
      runs-on: ubuntu-latest
      steps:
        - uses: butlerlogic/action-autotag@1.0.0
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          with:
            root: "pyproject.toml"
            regex_pattern: "version = \"([0-9\.])\""

        - name: Set the Kubernetes context
          uses: azure/k8s-set-context@v2
          with:
            method: service-account
            k8s-url: ${{ secrets.KUBERNETES_URL }}
            k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

        - name: Checkout source code
          uses: actions/checkout@v3

        - uses: azure/setup-helm@v3.5
          with:
             version: '3.14.1'

        - name: Helm upgrade
          shell: bash
          run: |
            cd chart
            helm dependency update . 
            helm upgrade --install yao . --set "secret.CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" \
              --set "registry_creds.registry=ghcr.io" \
              --set "registry_creds.username=read-registry" \
              --set "registry_creds.password=${{ secrets.REGISTRY_TOKEN }}"